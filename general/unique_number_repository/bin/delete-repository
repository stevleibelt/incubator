#!/bin/env php
<?php

require_once __DIR__ . '/../vendor/autoload.php';

use Net\Bazzline\Component\Cli\Arguments\Arguments;
use Net\Bazzline\Component\Command\Command;

$arguments = new Arguments($argv);

try {
    $numberOfArguments          = count($arguments->getArguments());
    $hasNotAtLeastOneArgument   = ($numberOfArguments < 2);

    if ($hasNotAtLeastOneArgument) {
        $message = 'invalid number of arguments supplied';

        throw new RuntimeException($message);
    }

    $host                   = (string) $arguments->getArguments()[0];
    $invalidHostProvided    = (strlen($host) < 1);
    $name                   = (string) $arguments->getArguments()[1];
    $invalidNameProvided    = (strlen($name) < 1);

    if ($invalidHostProvided) {
        $message = 'invalid host supplied';

        throw new RuntimeException($message);
    }

    if ($invalidNameProvided) {
        $message = 'invalid name supplied';

        throw new RuntimeException($message);
    }

    $command = new Command();
    //@see: http://blog.scottlowe.org/2014/02/19/using-curl-to-interact-with-a-restful-api/
    $lines = $command('/bin/env curl -s --ssl-no-revoke -X DELETE ' . $host . '/unique-number-repository/' . urlencode($name));

    foreach ($lines as $line) {
        echo $line . PHP_EOL;
    }
} catch (Exception $exception) {
    $usage = 'usage: ' . PHP_EOL .
        '    ' . basename(__FILE__) . ' <host> <repository name>' . PHP_EOL;

    echo 'An error occurred' . PHP_EOL;
    echo $exception->getMessage() . PHP_EOL;
    echo PHP_EOL;
    echo $usage;
    exit(1);
}
