#!/bin/env php
<?php
/**
 * @author net_bazzline_create_executable_command_line_file
 * @since 2015-10-25
 */

//begin of including composer autoload.php
$possiblePathsToComposerAutoloadFile = array(
    __DIR__ . '/../../../autoload.php',
    __DIR__ . '/../../vendor/autoload.php',
    __DIR__ . '/../vendor/autoload.php'
);
$pathToAutoloadFileNotFound = true;
$pathToAutoloadFile         = null;
foreach ($possiblePathsToComposerAutoloadFile as $path) {
    if (file_exists($path)) {
        $pathToAutoloadFile         = $path;
        $pathToAutoloadFileNotFound = false;
        break;
    }
}
if ($pathToAutoloadFileNotFound) {
    echo 'could not find composer autoload.php, no composer installed?' . PHP_EOL;
    exit(1);
}

require_once ($pathToAutoloadFile);
//end of including composer autoload.php

use Net\Bazzline\Component\Cli\Environment\CommandLineEnvironment;

$environment    = new CommandLineEnvironment($argv);
$usage			= basename(__FILE__) . ' [-v|--verbose]';

$environment->execute(
    function (CommandLineEnvironment $environment) {
        //@todo make following things configurable
        //  * relative path generator
        $command        = new Net\Bazzline\Component\Command\Command();
        $configuration  = require_once (__DIR__ . '/../configuration/configuration.php');
        $uuid           = Ramsey\Uuid\Uuid::uuid4()->toString();
        $relativePath   = date(
            'Y' . DIRECTORY_SEPARATOR .
            'm' . DIRECTORY_SEPARATOR .
            'd' . DIRECTORY_SEPARATOR . 
            'Hms'
        ) . DIRECTORY_SEPARATOR . 
        $uuid;

        $fileName       = 'entry.md';
        $directoryPath  = __DIR__ . '/../data/entries/' . $relativePath;    //@todo: put into configuration file: data/entries
        $filePath       = $directoryPath . DIRECTORY_SEPARATOR . $fileName;
        $template       = new \Net\Bazzline\Component\Template\FileBasedTemplate(
            $configuration['templates']['entry']['variables'],
            $configuration['templates']['entry']['path']
        );

        $directoryDoesNotExist = (!is_dir($directoryPath));

        if ($directoryDoesNotExist) {
            $command->execute('/bin/env mkdir -p "' . $directoryPath . '"');
        }
        $command->execute('/bin/env touch ' . $directoryPath . '/' . $fileName);
        $content = $template->render();
        file_put_contents($filePath, $content);

        $environment->outputIfVerbosityIsEnabled('created path: ' . realpath($relativePath));
    },
    $usage
);
